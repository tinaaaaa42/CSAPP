# rsum_list - Recursive version of sum_list

# System execute
.pos 0
irmovq stack, %rsp
call main
halt

# Sample linked list
.align 8
ele1:
			.quad 0x00a
			.quad ele2
ele2:
			.quad 0x0b0
			.quad ele3
ele3:
			.quad 0xc00
			.quad 0

main:
	irmovq ele1, %rdi
	call rsum_list
	ret

# function part of rsum_list
rsum_list:
	pushq %rbx
	xorq %rax, %rax    # use %rax to store val, and set it to 0
	andq %rdi, %rdi
	je end
	mrmovq (%rdi), %rbx
	mrmovq 8(%rdi), %rdi
	call rsum_list
	addq %rbx, %rax 

end:
	popq %rbx
	ret

.pos 0x400
stack:

