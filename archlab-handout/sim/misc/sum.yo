                            | # sum_list - Sum the elements of a linked list
                            | 
                            | # System execute
0x000:                      | .pos 0
0x000: 30f40001000000000000 | irmovq stack, %rsp
0x00a: 804800000000000000   | call main
0x013: 00                   | halt
                            | 
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 			.quad 0x00a
0x020: 2800000000000000     | 			.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 			.quad 0x0b0
0x030: 3800000000000000     | 			.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 			.quad 0xc00
0x040: 0000000000000000     | 			.quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq ele1, %rdi
0x052: 805c00000000000000   | 	call sum_list
0x05b: 90                   | 	ret
                            | 
                            | # function part of sum_list
0x05c:                      | sum_list:
0x05c: a03f                 | 	pushq %rbx
0x05e: 6300                 | 	xorq %rax, %rax      # use %rax to store val, and set it to 0
0x060: 707f00000000000000   | 	jmp loop_test
                            | 
0x069:                      | loop:
0x069: 50370000000000000000 | 	mrmovq (%rdi), %rbx
0x073: 6030                 | 	addq %rbx, %rax
0x075: 50770800000000000000 | 	mrmovq 8(%rdi), %rdi
                            | 
0x07f:                      | loop_test:
0x07f: 6277                 | 	andq %rdi, %rdi
0x081: 746900000000000000   | 	jne loop
0x08a: b03f                 | 	popq %rbx
0x08c: 90                   | 	ret
                            | 
0x100:                      | .pos 0x100
0x100:                      | stack:
                            | 
